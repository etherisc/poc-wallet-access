/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Verifier, VerifierInterface } from "../Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verifyHash",
    outputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verifyString",
    outputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061053c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c68e35b01461003b578063d2c3fbb71461006a575b600080fd5b61004e6100493660046102e7565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e610078366004610321565b610140565b6040805160208101829052601c60608201527f19457468657265756d205369676e6564204d6573736167653a0a3332000000006080820152908101859052600090819060a00160408051601f1981840301815282825280516020918201206000845290830180835281905260ff8816918301919091526060820186905260808201859052915060019060a0016020604051602081039080840390855afa15801561012b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6040805180820190915260208082527f19457468657265756d205369676e6564204d6573736167653a0a303030303030908201528451600091906039820190620f423f81111561018f57600080fd5b6000620186a05b801561021b5760006101a88285610469565b9050806101c757826101c7576101bf600a83610469565b915050610196565b826101d1816104bf565b93506101df90508282610489565b6101e990856104a8565b93506101f6600a83610469565b9150610203603082610451565b90508461020f816104bf565b95505080855350610196565b8161022957601b9150610237565b610234601a83610451565b91505b8185526000858b60405160200161024f929190610423565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8d1691830191909152606082018b9052608082018a9052915060019060a0016020604051602081039080840390855afa1580156102b7573d6000803e3d6000fd5b5050604051601f1901519c9b505050505050505050505050565b803560ff811681146102e257600080fd5b919050565b600080600080608085870312156102fc578384fd5b8435935061030c602086016102d1565b93969395505050506040820135916060013590565b60008060008060808587031215610336578384fd5b843567ffffffffffffffff8082111561034d578586fd5b818701915087601f830112610360578586fd5b813581811115610372576103726104f0565b604051601f8201601f19908116603f0116810190838211818310171561039a5761039a6104f0565b816040528281528a60208487010111156103b2578889fd5b826020860160208301378860208483010152809850505050505061030c602086016102d1565b60008151808452815b818110156103fd576020818501810151868301820152016103e1565b8181111561040e5782602083870101525b50601f01601f19169290920160200192915050565b60006040825261043660408301856103d8565b828103602084015261044881856103d8565b95945050505050565b60008219821115610464576104646104da565b500190565b60008261048457634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156104a3576104a36104da565b500290565b6000828210156104ba576104ba6104da565b500390565b60006000198214156104d3576104d36104da565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122002782d3c73980677d4e2d004298b0f174790d0cc127310e4a636a0816a01f83a64736f6c63430008020033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Verifier> {
    return super.deploy(overrides || {}) as Promise<Verifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  override connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
