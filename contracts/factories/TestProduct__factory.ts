/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TestProduct, TestProductInterface } from "../TestProduct";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "productName",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "capitalOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oracleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "riskpoolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LogComponentApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LogComponentArchived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "componentName",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IComponent.ComponentType",
        name: "componentType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "componentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    name: "LogComponentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LogComponentDeclined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LogComponentPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "componentName",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IComponent.ComponentType",
        name: "componentType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "componentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LogComponentProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LogComponentResumed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IComponent.ComponentState",
        name: "stateOld",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IComponent.ComponentState",
        name: "stateNew",
        type: "uint8",
      },
    ],
    name: "LogComponentStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LogComponentSuspended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LogComponentUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "LogProductApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "productAddress",
        type: "address",
      },
    ],
    name: "LogProductCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "LogProductDeclined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
    ],
    name: "LogProductProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    name: "LogTestOracleCallbackReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LogTestProductFundingReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ORACLE_CALLBACK_METHOD_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POLICY_FLOW",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "applications",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "policyHolder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sumInsured",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "metaData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "applicationData",
        type: "bytes",
      },
    ],
    name: "applyForPolicy",
    outputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sumInsured",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "metaData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "applicationData",
        type: "bytes",
      },
    ],
    name: "applyForPolicy",
    outputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "approvalCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "archiveCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
    ],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
    ],
    name: "closeClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
    ],
    name: "collectPremium",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPremium",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "collectPremium",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPremium",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "confirmedAmount",
        type: "uint256",
      },
    ],
    name: "confirmClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payoutAmount",
        type: "uint256",
      },
    ],
    name: "createPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "payoutId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "decline",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "declineCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
    ],
    name: "declineClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
    ],
    name: "expire",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getApplicationDataStructure",
    outputs: [
      {
        internalType: "string",
        name: "dataStructure",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimDataStructure",
    outputs: [
      {
        internalType: "string",
        name: "dataStructure",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
    ],
    name: "getClaimId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPayoutDataStructure",
    outputs: [
      {
        internalType: "string",
        name: "dataStructure",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
    ],
    name: "getPayoutId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPolicyFlow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegistry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRiskpoolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getState",
    outputs: [
      {
        internalType: "enum IComponent.ComponentState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getType",
    outputs: [
      {
        internalType: "enum IComponent.ComponentType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isProduct",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRiskpool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sumInsured",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "metaData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "applicationData",
        type: "bytes",
      },
    ],
    name: "newAppliation",
    outputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payoutAmount",
        type: "uint256",
      },
    ],
    name: "newPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "payoutId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "responseData",
        type: "bytes",
      },
    ],
    name: "oracleCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "policies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "payoutId",
        type: "uint256",
      },
    ],
    name: "processPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resumeCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "capacity",
        type: "uint256",
      },
    ],
    name: "riskPoolCapacityCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "setId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
    ],
    name: "submitClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
    ],
    name: "submitClaimNoOracle",
    outputs: [
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
    ],
    name: "submitClaimWithDeferredResponse",
    outputs: [
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "suspendCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "underwrite",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpauseCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002e7938038062002e798339810160408190526200003491620004f5565b858570506f6c69637944656661756c74466c6f7760781b8484846001826200005c3362000379565b6001600160a01b038116620000c45760405162461bcd60e51b815260206004820152602360248201527f4552524f523a434d502d3030343a52454749535452595f414444524553535f5a60448201526245524f60e81b60648201526084015b60405180910390fd5b60038054610100600160a81b0319166101006001600160a01b03841602179055620000ee620003c9565b600480546001600160a01b0319166001600160a01b039290921691909117905562000118620003e4565b600580546001600160a01b0319166001600160a01b03929092169190911790556200014262000411565b600680546001600160a01b0319166001600160a01b0392909216919091179055600183815560038054849260ff19909116908360028111156200019557634e487b7160e01b600052602160045260246000fd5b02179055506001546003546040517f04a2dea3211d6352f30925875b6e2e984642f84e1bcffe65ffaa1b04c1197b7a92620001e992909160ff82169130916101009091046001600160a01b0316906200055a565b60405180910390a15050600880546001600160a01b0319166001600160a01b0387161790555060098290556200021f836200042b565b600780546001600160a01b0319166001600160a01b03929092169190911790556200025b6d50726f647563745365727669636560901b6200042b565b600a80546001600160a01b0319166001600160a01b0392909216919091179055620002986e496e7374616e63655365727669636560881b6200042b565b600b80546001600160a01b0319166001600160a01b03929092169190911790556040513081527fced180b842b890d77dab95dcbf4654065589a164226ef9faa91a7601fb67c4679060200160405180910390a150505050506001600160a01b038516620003485760405162461bcd60e51b815260206004820152601d60248201527f4552524f523a54492d323a544f4b454e5f414444524553535f5a45524f0000006044820152606401620000bb565b50600c80546001600160a01b0319166001600160a01b039490941693909317909255600d55600e5550620005a59050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620003df6541636365737360d01b6200042b565b905090565b6000620003df7f436f6d706f6e656e744f776e65725365727669636500000000000000000000006200042b565b6000620003df6e496e7374616e63655365727669636560881b5b600354604051631c2d8fb360e31b81526004810183905260009161010090046001600160a01b03169063e16c7d989060240160206040518083038186803b1580156200047657600080fd5b505afa1580156200048b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b19190620004d1565b90505b919050565b80516001600160a01b0381168114620004b457600080fd5b600060208284031215620004e3578081fd5b620004ee82620004b9565b9392505050565b60008060008060008060c087890312156200050e578182fd5b865195506200052060208801620004b9565b94506200053060408801620004b9565b935060608701519250608087015191506200054e60a08801620004b9565b90509295509295509295565b84815260808101600385106200058057634e487b7160e01b600052602160045260246000fd5b60208201949094526001600160a01b0392831660408201529116606090910152919050565b6128c480620005b56000396000f3fe6080604052600436106103505760003560e01c806370d2fe53116101c6578063b9ea8d66116100f7578063e0815f0d11610095578063ec8b4a9a1161006f578063ec8b4a9a146108bc578063f2fde38b146108f1578063f4fdc1fa14610911578063fe64372b1461092f57610350565b8063e0815f0d14610874578063e3ebdea514610889578063e6f95edd146108a957610350565b8063c6441798116100d1578063c64417981461081f578063d0e0ba951461083f578063d73cd992146105e3578063dcc59b6f1461085f57610350565b8063b9ea8d66146107cd578063bd1fe5d01461080a578063be169e7e146105e357610350565b80638da5cb5b11610164578063a18f5ae21161013e578063a18f5ae2146105e3578063ab72c4e114610780578063b3fca9bd146105e3578063b75c7dc6146107ad57610350565b80638da5cb5b1461074d57806394f64ff41461054f5780639a82f8901461076b57610350565b80637ce5e82f116101a05780637ce5e82f146106e35780637f29dba2146106f8578063893d20e8146107185780638cc7d3d11461072d57610350565b806370d2fe5314610699578063715018a6146106ae57806379ed5209146106c357610350565b806339c79e0c116102a057806359dacc6a1161023e5780635e61aa63116102185780635e61aa6314610631578063637d08f414610651578063638ce0ba1461066f578063702e7e1f1461068457610350565b806359dacc6a146105e35780635ab1bd53146105f85780635d1ca6311461061c57610350565b80633ec92bda1161027a5780633ec92bda1461054f5780634703dc8d146105835780634cda0de9146105a35780634e02c63f146105c357610350565b806339c79e0c1461052f57806339cf5e161461054f5780633dcabeab1461057057610350565b80631b867c631161030d578063258d560c116102e7578063258d560c146104aa57806329abdbd7146104cf5780632b1994ba146104ef5780632b6778411461050f57610350565b80631b867c631461041c57806321df0da714610431578063232d346a1461046357610350565b806303f0ac1a1461035557806309128d831461037b57806315dae03e146103a357806317d7de7c146103c35780631865c57d146103d85780631b07b17f146103fa575b600080fd5b61036861036336600461250e565b61094f565b6040519081526020015b60405180910390f35b34801561038757600080fd5b5061036870506f6c69637944656661756c74466c6f7760781b81565b3480156103af57600080fd5b5060035460ff1660405161037291906126ac565b3480156103cf57600080fd5b50600154610368565b3480156103e457600080fd5b506103ed610a0c565b6040516103729190612692565b34801561040657600080fd5b5061041a610415366004612251565b610a92565b005b34801561042857600080fd5b5061041a610ae7565b34801561043d57600080fd5b506008546001600160a01b03165b6040516001600160a01b039091168152602001610372565b34801561046f57600080fd5b5061049d6040518060400160405280600e81526020016d6f7261636c6543616c6c6261636b60901b81525081565b60405161037291906126c0565b3480156104b657600080fd5b506104bf610b3f565b6040519015158152602001610372565b3480156104db57600080fd5b506103686104ea366004612251565b610b6f565b3480156104fb57600080fd5b5061036861050a3660046122a2565b610b84565b34801561051b57600080fd5b5061036861052a366004612281565b610bc1565b34801561053b57600080fd5b5061041a61054a366004612251565b610d1b565b34801561055b57600080fd5b5060408051602081019091526000815261049d565b61036861057e366004612150565b610d2c565b34801561058f57600080fd5b5061036861059e3660046122a2565b610e2e565b3480156105af57600080fd5b5061041a6105be366004612281565b610e68565b3480156105cf57600080fd5b5061041a6105de3660046122a2565b610e7a565b3480156105ef57600080fd5b5061041a610e92565b34801561060457600080fd5b5061044b60035461010090046001600160a01b031690565b34801561062857600080fd5b50600254610368565b34801561063d57600080fd5b5061041a61064c36600461249a565b610edc565b34801561065d57600080fd5b506007546001600160a01b031661044b565b34801561067b57600080fd5b5061041a611040565b34801561069057600080fd5b50601054610368565b3480156106a557600080fd5b50600954610368565b3480156106ba57600080fd5b5061041a61108d565b3480156106cf57600080fd5b506103686106de366004612281565b61109f565b3480156106ef57600080fd5b50600f54610368565b34801561070457600080fd5b5061041a610713366004612281565b611199565b34801561072457600080fd5b5061044b6111ab565b34801561073957600080fd5b5061041a610748366004612251565b6111bd565b34801561075957600080fd5b506000546001600160a01b031661044b565b34801561077757600080fd5b506104bf6111ce565b34801561078c57600080fd5b5061036861079b366004612251565b60009081526012602052604090205490565b3480156107b957600080fd5b5061041a6107c8366004612251565b6111d6565b3480156107d957600080fd5b506107ed6107e8366004612251565b61128f565b604080519315158452602084019290925290820152606001610372565b34801561081657600080fd5b5061041a6112b2565b34801561082b57600080fd5b5061041a61083a366004612251565b6112ff565b34801561084b57600080fd5b5061041a61085a366004612251565b611310565b34801561086b57600080fd5b50601154610368565b34801561088057600080fd5b506104bf61135a565b34801561089557600080fd5b506107ed6108a4366004612281565b611363565b6103686108b736600461250e565b611388565b3480156108c857600080fd5b506108dc6108d7366004612281565b61148e565b60408051928352602083019190915201610372565b3480156108fd57600080fd5b5061041a61090c366004612118565b6115ee565b34801561091d57600080fd5b5061041a61092c366004612251565b50565b34801561093b57600080fd5b5061041a61094a366004612281565b611664565b6000803390506109cb81898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a908190840183828082843760009201919091525061167c92505050565b600f80546001810182556000919091527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020181905598975050505050505050565b600654600254604051635e966e4560e01b815260048101919091526000916001600160a01b031690635e966e459060240160206040518083038186803b158015610a5557600080fd5b505afa158015610a69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8d91906122cd565b905090565b610a9a611711565b6000610aa58261176b565b90508015610ae357601080546001810182556000919091527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672018290555b5050565b610afc6810dbdb5c1bdb995b9d60ba1b6117f0565b6001600160a01b0316336001600160a01b031614610b355760405162461bcd60e51b8152600401610b2c906126d3565b60405180910390fd5b610b3d611872565b565b600060025b60035460ff166002811115610b6957634e487b7160e01b600052602160045260246000fd5b14905090565b6000818152601360205260409020545b919050565b6000610b8e611711565b6040805160006020820152610bb991869186918691015b6040516020818303038152906040526118af565b949350505050565b600b5460405163296586d360e21b815260048101849052600091849183916001600160a01b03169063a5961b4c9060240160006040518083038186803b158015610c0a57600080fd5b505afa158015610c1e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c469190810190612397565b519050336001600160a01b03821614610c715760405162461bcd60e51b8152600401610b2c9061270a565b60118054906000610c8183612801565b9190505550610ca0858560405180602001604052806000815250611941565b600086815260126020908152604080832084905560115481519283015260019082018190529295506060016040516020818303038152906040529050610d1087826040518060400160405280600e81526020016d6f7261636c6543616c6c6261636b60901b815250600d546119c8565b505050505092915050565b610d23611711565b61092c81611a01565b6000610da488888888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525061167c92505050565b600f805460018101825560009182527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80201829055909150610de48261176b565b90508015610e2257601080546001810182556000919091527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672018290555b50979650505050505050565b6000610e38611711565b6040805160006020820152610e539186918691869101610ba5565b9050610e5f8482611a63565b50509392505050565b610e70611711565b610ae38282611af7565b610e82611711565b610e8d838383611b59565b505050565b610ea76810dbdb5c1bdb995b9d60ba1b6117f0565b6001600160a01b0316336001600160a01b031614610ed75760405162461bcd60e51b8152600401610b2c906126d3565b610b3d565b610eed64517565727960d81b6117f0565b6001600160a01b0316336001600160a01b031614610f4d5760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a5052442d3030333a4143434553535f44454e49454400000000006044820152606401610b2c565b7f76f1662da8419575225dd3addaf14184129f5230097a533de445a2d5688a399e84848484604051610f829493929190612750565b60405180910390a16000610f98828401846121e3565b600085815260126020526040902054909150811561102e57610fb985611bca565b506000610fc68683611c84565b6020810151909150610fd9878483611b59565b60408051600060208083018290528351808403909101815291830190925282916110058a8785856118af565b60008b815260136020526040902081905590506110228a82611a63565b50505050505050611038565b6110388582611af7565b505050505050565b6110556810dbdb5c1bdb995b9d60ba1b6117f0565b6001600160a01b0316336001600160a01b0316146110855760405162461bcd60e51b8152600401610b2c906126d3565b610b3d611d4c565b611095611711565b610b3d6000611d76565b600b5460405163296586d360e21b815260048101849052600091849183916001600160a01b03169063a5961b4c9060240160006040518083038186803b1580156110e857600080fd5b505afa1580156110fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111249190810190612397565b519050336001600160a01b0382161461114f5760405162461bcd60e51b8152600401610b2c9061270a565b6011805490600061115f83612801565b919050555061117e858560405180602001604052806000815250611941565b60009586526012602052604090952085905550929392505050565b6111a1611711565b610ae38282611dc6565b600080546001600160a01b0316610a8d565b6111c5611711565b61092c81611dfe565b600080610b44565b600b5460405163296586d360e21b81526004810183905282916000916001600160a01b039091169063a5961b4c9060240160006040518083038186803b15801561121f57600080fd5b505afa158015611233573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261125b9190810190612397565b519050336001600160a01b038216146112865760405162461bcd60e51b8152600401610b2c9061270a565b610e8d83611e2f565b600080600061129c611711565b6112a584611e60565b9196909550909350915050565b6112c76810dbdb5c1bdb995b9d60ba1b6117f0565b6001600160a01b0316336001600160a01b0316146112f75760405162461bcd60e51b8152600401610b2c906126d3565b610b3d611eae565b611307611711565b61092c81611ed8565b6113256810dbdb5c1bdb995b9d60ba1b6117f0565b6001600160a01b0316336001600160a01b0316146113555760405162461bcd60e51b8152600401610b2c906126d3565b600255565b60006001610b44565b6000806000611370611711565b61137a8585611f09565b919790965090945092505050565b60008033905061140481898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a908190840183828082843760009201919091525061167c92505050565b600f805460018101825560009182527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802018290559092506114448361176b565b9050801561148257601080546001810182556000919091527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672018390555b50509695505050505050565b600b5460405163296586d360e21b8152600481018490526000918291859183916001600160a01b039091169063a5961b4c9060240160006040518083038186803b1580156114db57600080fd5b505afa1580156114ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115179190810190612397565b519050336001600160a01b038216146115425760405162461bcd60e51b8152600401610b2c9061270a565b6011805490600061155283612801565b9190505550611571868660405180602001604052806000815250611941565b6000878152601260209081526040808320849055601154815192830152810182905291955090819060600160405160208183030381529060405290506115e188826040518060400160405280600e81526020016d6f7261636c6543616c6c6261636b60901b815250600d546119c8565b9450505050509250929050565b6115f6611711565b6001600160a01b03811661165b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b2c565b61092c81611d76565b61166c611711565b6116768282611a63565b50505050565b600a546040516349dc20a560e11b81526000916001600160a01b0316906393b8414a906116b590899089908990899089906004016125ba565b602060405180830381600087803b1580156116cf57600080fd5b505af11580156116e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117079190612269565b9695505050505050565b6000546001600160a01b03163314610b3d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b2c565b600a54604051631b07b17f60e01b8152600481018390526000916001600160a01b031690631b07b17f90602401602060405180830381600087803b1580156117b257600080fd5b505af11580156117c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ea91906121ff565b92915050565b600354604051631c2d8fb360e31b81526004810183905260009161010090046001600160a01b03169063e16c7d989060240160206040518083038186803b15801561183a57600080fd5b505afa15801561184e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ea9190612134565b7fb79d34516b55d664b61192aa41fbc0625b132fb7129bd3b3a31f46d1befa706161189c60025490565b60405190815260200160405180910390a1565b600a54604051633c0ebc2360e11b81526000916001600160a01b03169063781d7846906118e690889088908890889060040161266d565b602060405180830381600087803b15801561190057600080fd5b505af1158015611914573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119389190612269565b95945050505050565b600a5460405163fae43d1560e01b81526000916001600160a01b03169063fae43d15906119769087908790879060040161264e565b602060405180830381600087803b15801561199057600080fd5b505af11580156119a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb99190612269565b600a546040516316499f9160e11b81526000916001600160a01b031690632c933f22906118e69088908890889030908990600401612605565b600a54604051630e71e78360e21b8152600481018390526001600160a01b03909116906339c79e0c906024015b600060405180830381600087803b158015611a4857600080fd5b505af1158015611a5c573d6000803e3d6000fd5b5050505050565b600a5460405163fe64372b60e01b8152600481018490526024810183905260009182916001600160a01b039091169063fe64372b906044016040805180830381600087803b158015611ab457600080fd5b505af1158015611ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aec91906124eb565b909590945092505050565b600a54604051634cda0de960e01b815260048101849052602481018390526001600160a01b0390911690634cda0de9906044015b600060405180830381600087803b158015611b4557600080fd5b505af1158015611038573d6000803e3d6000fd5b600a54604051634e02c63f60e01b81526004810185905260248101849052604481018390526001600160a01b0390911690634e02c63f90606401600060405180830381600087803b158015611bad57600080fd5b505af1158015611bc1573d6000803e3d6000fd5b50505050505050565b611c046040805160c08101909152806000815260200160008152602001600081526020016060815260200160008152602001600081525090565b600b54604051632f141bd960e21b8152600481018490526001600160a01b039091169063bc506f649060240160006040518083038186803b158015611c4857600080fd5b505afa158015611c5c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117ea91908101906122ec565b611cbe6040805160c08101909152806000815260200160008152602001600081526020016060815260200160008152602001600081525090565b600b54604051637f22c2d960e01b815260048101859052602481018490526001600160a01b0390911690637f22c2d99060440160006040518083038186803b158015611d0957600080fd5b505afa158015611d1d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611d4591908101906122ec565b9392505050565b7fcff3b7b8b07d4d8f74bf41f05737717140d5916781b9dff86ea0b996f2fdb9f961189c60025490565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600a54604051633f94edd160e11b815260048101849052602481018390526001600160a01b0390911690637f29dba290604401611b2b565b600a54604051638cc7d3d160e01b8152600481018390526001600160a01b0390911690638cc7d3d190602401611a2e565b600a54604051635bae3ee360e11b8152600481018390526001600160a01b039091169063b75c7dc690602401611a2e565b600080600080611e6f85611f93565b9050806020015181604001511015611ea657611e9e8582604001518360200151611e9991906127be565b611f09565b919550935091505b509193909250565b7f38954b1d025d5a8ffcf9b42d431be2745cdcd05d32b0e5ad33ee2db025ef5b5561189c60025490565b600a546040516318c882f360e31b8152600481018390526001600160a01b039091169063c644179890602401611a2e565b600a5460405163e3ebdea560e01b81526004810184905260248101839052600091829182916001600160a01b03169063e3ebdea590604401606060405180830381600087803b158015611f5b57600080fd5b505af1158015611f6f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137a919061221b565b611fe3604080516101208101909152806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600b5460405163a3f685f960e01b8152600481018490526001600160a01b039091169063a3f685f9906024016101206040518083038186803b15801561202857600080fd5b505afa15801561203c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ea9190612415565b60008083601f840112612071578182fd5b50813567ffffffffffffffff811115612088578182fd5b6020830191508360208285010111156120a057600080fd5b9250929050565b600082601f8301126120b7578081fd5b815167ffffffffffffffff8111156120d1576120d1612848565b6120e4601f8201601f191660200161278d565b8181528460208386010111156120f8578283fd5b610bb98260208301602087016127d5565b805160038110610b7f57600080fd5b600060208284031215612129578081fd5b8135611d458161285e565b600060208284031215612145578081fd5b8151611d458161285e565b600080600080600080600060a0888a03121561216a578283fd5b87356121758161285e565b96506020880135955060408801359450606088013567ffffffffffffffff8082111561219f578485fd5b6121ab8b838c01612060565b909650945060808a01359150808211156121c3578384fd5b506121d08a828b01612060565b989b979a50959850939692959293505050565b6000602082840312156121f4578081fd5b8135611d4581612873565b600060208284031215612210578081fd5b8151611d4581612873565b60008060006060848603121561222f578081fd5b835161223a81612873565b602085015160409095015190969495509392505050565b600060208284031215612262578081fd5b5035919050565b60006020828403121561227a578081fd5b5051919050565b60008060408385031215612293578182fd5b50508035926020909101359150565b6000806000606084860312156122b6578081fd5b505081359360208301359350604090920135919050565b6000602082840312156122de578081fd5b815160078110611d45578182fd5b6000602082840312156122fd578081fd5b815167ffffffffffffffff80821115612314578283fd5b9083019060c08286031215612327578283fd5b61233160c061278d565b825161233c81612881565b808252506020830151602082015260408301516040820152606083015182811115612365578485fd5b612371878286016120a7565b6060830152506080830151608082015260a083015160a082015280935050505092915050565b6000602082840312156123a8578081fd5b815167ffffffffffffffff808211156123bf578283fd5b9083019060c082860312156123d2578283fd5b6123dc60c061278d565b82516123e78161285e565b8152602083810151908201526123ff60408401612109565b6040820152606083015182811115612365578485fd5b6000610120808385031215612428578182fd5b6124318161278d565b905061243c83612109565b81526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b600080600080606085870312156124af578182fd5b8435935060208501359250604085013567ffffffffffffffff8111156124d3578283fd5b6124df87828801612060565b95989497509550505050565b600080604083850312156124fd578182fd5b505080516020909101519092909150565b60008060008060008060808789031215612526578384fd5b8635955060208701359450604087013567ffffffffffffffff8082111561254b578586fd5b6125578a838b01612060565b9096509450606089013591508082111561256f578384fd5b5061257c89828a01612060565b979a9699509497509295939492505050565b600081518084526125a68160208601602086016127d5565b601f01601f19169290920160200192915050565b600060018060a01b038716825285602083015284604083015260a060608301526125e760a083018561258e565b82810360808401526125f9818561258e565b98975050505050505050565b600086825260a0602083015261261e60a083018761258e565b8281036040840152612630818761258e565b6001600160a01b039590951660608401525050608001529392505050565b600084825283602083015260606040830152611938606083018461258e565b600085825284602083015283604083015260806060830152611707608083018461258e565b60208101600783106126a6576126a6612832565b91905290565b60208101600383106126a6576126a6612832565b600060208252611d45602083018461258e565b6020808252601b908201527f4552524f523a434d502d3030323a4e4f545f434f4d504f4e454e540000000000604082015260600190565b60208082526026908201527f4552524f523a5052442d3030313a504f4c4943595f4f525f484f4c4445525f4960408201526513959053125160d21b606082015260800190565b60008582528460208301526060604083015282606083015282846080840137818301608090810191909152601f909201601f191601019392505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156127b6576127b6612848565b604052919050565b6000828210156127d0576127d061281c565b500390565b60005b838110156127f05781810151838201526020016127d8565b838111156116765750506000910152565b60006000198214156128155761281561281c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461092c57600080fd5b801515811461092c57600080fd5b6004811061092c57600080fdfea2646970667358221220d34ce75e2cda28be56bd569ef12dfb3d53ec718999d3b2f7a86eb484316cb14f64736f6c63430008020033";

type TestProductConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestProductConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestProduct__factory extends ContractFactory {
  constructor(...args: TestProductConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    productName: PromiseOrValue<BytesLike>,
    tokenAddress: PromiseOrValue<string>,
    capitalOwner: PromiseOrValue<string>,
    oracleId: PromiseOrValue<BigNumberish>,
    riskpoolId: PromiseOrValue<BigNumberish>,
    registryAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestProduct> {
    return super.deploy(
      productName,
      tokenAddress,
      capitalOwner,
      oracleId,
      riskpoolId,
      registryAddress,
      overrides || {}
    ) as Promise<TestProduct>;
  }
  override getDeployTransaction(
    productName: PromiseOrValue<BytesLike>,
    tokenAddress: PromiseOrValue<string>,
    capitalOwner: PromiseOrValue<string>,
    oracleId: PromiseOrValue<BigNumberish>,
    riskpoolId: PromiseOrValue<BigNumberish>,
    registryAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      productName,
      tokenAddress,
      capitalOwner,
      oracleId,
      riskpoolId,
      registryAddress,
      overrides || {}
    );
  }
  override attach(address: string): TestProduct {
    return super.attach(address) as TestProduct;
  }
  override connect(signer: Signer): TestProduct__factory {
    return super.connect(signer) as TestProduct__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestProductInterface {
    return new utils.Interface(_abi) as TestProductInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestProduct {
    return new Contract(address, _abi, signerOrProvider) as TestProduct;
  }
}
